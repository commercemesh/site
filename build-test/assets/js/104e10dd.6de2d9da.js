"use strict";(self.webpackChunkcommercemesh_site=self.webpackChunkcommercemesh_site||[]).push([[9562],{28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>c});var s=n(96540);const i={},t=s.createContext(i);function d(e){const r=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(t.Provider,{value:r},e.children)}},67004:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"registry/overview","title":"Overview","description":"The CMP Brand Registry is a decentralized directory of brands participating in the Commerce Mesh Protocol. It serves as the foundation for product discovery and trust across the network.","source":"@site/docs/registry/overview.md","sourceDirName":"registry","slug":"/registry/overview","permalink":"/docs/registry/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/commercemesh/commercemesh-site/tree/main/docs/registry/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Overview"},"sidebar":"tutorialSidebar","previous":{"title":"Brand Registry","permalink":"/docs/category/brand-registry"},"next":{"title":"Registration Guide","permalink":"/docs/registry/registration"}}');var i=n(74848),t=n(28453);const d={sidebar_position:1,title:"Overview"},c="Brand Registry Overview",o={},l=[{value:"What is the Brand Registry?",id:"what-is-the-brand-registry",level:2},{value:"Registry Structure",id:"registry-structure",level:2},{value:"Brand Entry Format",id:"brand-entry-format",level:2},{value:"Required Fields",id:"required-fields",level:2},{value:"Optional Fields",id:"optional-fields",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"URN Identifiers",id:"urn-identifiers",level:3},{value:"Product Feed Reference",id:"product-feed-reference",level:3},{value:"Category Taxonomy",id:"category-taxonomy",level:3},{value:"How It Works",id:"how-it-works",level:2},{value:"Registry Access",id:"registry-access",level:2},{value:"Fetching the Registry",id:"fetching-the-registry",level:3},{value:"Filtering Brands",id:"filtering-brands",level:3},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"brand-registry-overview",children:"Brand Registry Overview"})}),"\n",(0,i.jsx)(r.p,{children:"The CMP Brand Registry is a decentralized directory of brands participating in the Commerce Mesh Protocol. It serves as the foundation for product discovery and trust across the network."}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:["\ud83d\udcc4 ",(0,i.jsx)(r.strong,{children:"Official Specification"}),": ",(0,i.jsx)(r.a,{href:"https://github.com/commercemesh/commercemesh/tree/main/spec/brand-registry/v0.1",children:"github.com/commercemesh/commercemesh/tree/main/spec/brand-registry/v0.1"})]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"what-is-the-brand-registry",children:"What is the Brand Registry?"}),"\n",(0,i.jsx)(r.p,{children:"The Brand Registry is a JSON-LD formatted collection of brand entries that:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Identifies"})," brands uniquely across the network using URNs"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Links"})," to product feeds and brand information"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Establishes"})," trust through verified brand data"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Enables"})," discovery by AI agents and applications"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"registry-structure",children:"Registry Structure"}),"\n",(0,i.jsx)(r.p,{children:"The registry is maintained as a simple JSON array in the CMP repository:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"/registry/\n  \u251c\u2500\u2500 brands.json          # Main registry file\n  \u251c\u2500\u2500 example/            # Example entries\n  \u2502   \u2514\u2500\u2500 brands.json     # Sample brand entry\n  \u2514\u2500\u2500 schema/             # Schema documentation\n      \u2514\u2500\u2500 schema.md       # Field specifications\n"})}),"\n",(0,i.jsx)(r.h2,{id:"brand-entry-format",children:"Brand Entry Format"}),"\n",(0,i.jsxs)(r.p,{children:["Based on the ",(0,i.jsx)(r.a,{href:"https://github.com/commercemesh/commercemesh/blob/main/spec/brand-registry/v0.1/schema/brand-registry-schema.jsonld",children:"official schema"}),", each entry follows this structure:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "@context": {\n    "schema": "https://schema.org/",\n    "cmp": "https://schema.commercemesh.ai/ns#"\n  },\n  "@type": "Organization",\n  "name": "Example Brand",\n  "url": "https://example.com",\n  "logo": "https://example.com/logo.png",\n  "description": "Brief description of the organization",\n  "cmp:brandId": "urn:cmp:brandid:123e4567-e89b-12d3-a456-426614174000",\n  "cmp:productFeed": {\n    "@type": "DataFeed",\n    "url": "https://example.com/cmp/products/feed.json"\n  },\n  "cmp:category": ["electronics", "computers"],\n  "brand": {\n    "@type": "Brand",\n    "name": "Example Brand",\n    "logo": "https://example.com/brand-logo.png",\n    "identifier": {\n      "@type": "PropertyValue",\n      "propertyID": "cmp:brandId",\n      "value": "urn:cmp:brandid:123e4567-e89b-12d3-a456-426614174000"\n    }\n  },\n  "sameAs": [\n    "https://twitter.com/example",\n    "https://linkedin.com/company/example"\n  ]\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"required-fields",children:"Required Fields"}),"\n",(0,i.jsxs)(r.p,{children:["According to the ",(0,i.jsx)(r.a,{href:"https://github.com/commercemesh/commercemesh/blob/main/spec/brand-registry/v0.1/README.md",children:"brand registry schema"}),":"]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"@context"})}),(0,i.jsx)(r.td,{children:"object/string"}),(0,i.jsxs)(r.td,{children:['Schema context (can be string "',(0,i.jsx)(r.a,{href:"https://schema.org",children:"https://schema.org"}),'" or object with namespaces)']})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"@type"})}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:'Must be "Organization"'})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"name"})}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Brand's display name"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"url"})}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Canonical domain URL"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"logo"})}),(0,i.jsx)(r.td,{children:"string (URI)"}),(0,i.jsx)(r.td,{children:"URL to brand logo"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"cmp:productFeed"})}),(0,i.jsx)(r.td,{children:"object"}),(0,i.jsx)(r.td,{children:"DataFeed object with url property"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"cmp:brandId"})}),(0,i.jsx)(r.td,{children:"string (URN)"}),(0,i.jsx)(r.td,{children:"Unique brand identifier"})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"optional-fields",children:"Optional Fields"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"description"})}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Organization description"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"cmp:category"})}),(0,i.jsx)(r.td,{children:"array"}),(0,i.jsx)(r.td,{children:"Business category slugs"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"cmp:did"})}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Decentralized Identifier"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"brand"})}),(0,i.jsx)(r.td,{children:"object"}),(0,i.jsx)(r.td,{children:"Nested brand information"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"sameAs"})}),(0,i.jsx)(r.td,{children:"array"}),(0,i.jsx)(r.td,{children:"Social media profile URLs"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"identifier"})}),(0,i.jsx)(r.td,{children:"object"}),(0,i.jsxs)(r.td,{children:["Additional identifiers (e.g., cmp",":orgId",")"]})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,i.jsx)(r.h3,{id:"urn-identifiers",children:"URN Identifiers"}),"\n",(0,i.jsx)(r.p,{children:"CMP uses URN (Uniform Resource Name) format for unique identification:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Brand ID: ",(0,i.jsx)(r.code,{children:"urn:cmp:brandid:{uuid}"})]}),"\n",(0,i.jsxs)(r.li,{children:["Organization ID: ",(0,i.jsx)(r.code,{children:"urn:cmp:orgid:{uuid}"})]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"These are generated using UUID v5 with the CMP namespace."}),"\n",(0,i.jsx)(r.h3,{id:"product-feed-reference",children:"Product Feed Reference"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"cmp:productFeed"})," field is an object, not just a URL:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'"cmp:productFeed": {\n  "@type": "DataFeed",\n  "url": "https://example.com/cmp/products/feed.json"\n}\n'})}),"\n",(0,i.jsx)(r.h3,{id:"category-taxonomy",children:"Category Taxonomy"}),"\n",(0,i.jsx)(r.p,{children:"Categories use lowercase slugs from a predefined taxonomy:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"electronics"}),", ",(0,i.jsx)(r.code,{children:"fashion"}),", ",(0,i.jsx)(r.code,{children:"home"}),", ",(0,i.jsx)(r.code,{children:"books"}),", etc."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Brand Registration"})," - Brands submit their entry following the schema"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Validation"})," - Entries are validated against the official schema"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Publication"})," - Approved entries are added to brands.json"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Discovery"})," - Applications query the registry to find brands"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Integration"})," - Product feeds are accessed via the registered URLs"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"registry-access",children:"Registry Access"}),"\n",(0,i.jsx)(r.h3,{id:"fetching-the-registry",children:"Fetching the Registry"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"const registry = await fetch(\n  'https://raw.githubusercontent.com/commercemesh/commercemesh/main/registry/brands.json'\n).then(r => r.json());\n"})}),"\n",(0,i.jsx)(r.h3,{id:"filtering-brands",children:"Filtering Brands"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-javascript",children:"// Find by category\nconst electronicsbrands = registry.filter(org => \n  org['cmp:category']?.includes('electronics')\n);\n\n// Find by brand ID\nconst brand = registry.find(org => \n  org['cmp:brandId'] === 'urn:cmp:brandid:123e4567-e89b-12d3-a456-426614174000'\n);\n"})}),"\n",(0,i.jsx)(r.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/docs/registry/registration",children:"Registration Guide"})," - Step-by-step registration process"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://github.com/commercemesh/commercemesh/blob/main/spec/brand-registry/v0.1/schema/brand-registry-schema.jsonld",children:"Schema Reference"})," - Official schema definition"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://github.com/commercemesh/commercemesh/blob/main/spec/brand-registry/v0.1/schema/example.jsonld",children:"Example Entry"})," - Complete example from spec"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);